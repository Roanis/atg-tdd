subprojects {
	apply plugin: 'java'
	apply plugin: 'maven'   
	apply plugin: 'eclipse'
		
	group = 'roanis.tdd'
	sourceCompatibility = 1.6
	version = '1.0'
	
	project.ext {
	  dynHome="$System.env.DYNAMO_HOME"  
	  atgLibs = files(dynHome+'/../DAS/lib/classes.jar', dynHome+'/../DAS/lib/resources.jar', dynHome+'/../DAS-UI/lib/uiclasses.jar', dynHome+'/../DAS/lib/validation-api-1.0.0.GA.jar',
	  				dynHome+'/../DPS/lib/classes.jar', dynHome+'/../DPS/lib/resources.jar', 
	  				dynHome+'/../DSS/lib/classes.jar', dynHome+'/../DSS/lib/resources.jar',
	  				dynHome+'/../DCS/lib/classes.jar', dynHome+'/../DCS/lib/resources.jar') 
	  m2Repo="$System.env.M2_REPO"
	  atgJavadocLocation='http://docs.oracle.com/cd/E35319_01/Platform.10-2/apidoc'
	}      
	
	
	repositories {   
		mavenLocal()
	    mavenCentral()
	}   
	
	dependencies {
	    compile 'commons-collections:commons-collections:3.2', 'cglib:cglib:2+'     
		compile atgLibs
	    testCompile group: 'junit', name: 'junit', version: '4.+'
	}
	
	jar {	
	    manifest {
	        writeTo file(project.projectDir.getAbsolutePath() + '/META-INF/MANIFEST.MF')
	    }
	}
	
	uploadArchives {
	    repositories {       
	        mavenDeployer {
	            repository(url: "file://" + m2Repo)
	        }
	    }
	}
	
	eclipse.classpath.file {
	    whenMerged { classpath ->
	    	def entries = classpath.entries.findAll { it instanceof org.gradle.plugins.ide.eclipse.model.Library  && it.path.indexOf('/lib/classes.jar') !=-1  }
	        entries.each { entry->
	        	entry.entryAttributes.put('javadoc_location', atgJavadocLocation)            
	        }        
	    }
	}

}